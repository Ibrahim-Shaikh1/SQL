These problem answers were derived from my public StrataScratch account. If you wish to see more answers or view the 
material in a better view, please visit my StrataScratch account availble on my linktree @ https://linktr.ee/Ibrahim_Shaikh


Question 1: Host Popularity Rental Prices
You’re given a table of rental property searches by users. The table consists of search results and outputs host information for searchers. Find the minimum, average, maximum rental prices for each host’s popularity rating. The host’s popularity rating is defined as below:
0 reviews: New
1 to 5 reviews: Rising
6 to 15 reviews: Trending Up
16 to 40 reviews: Popular
more than 40 reviews: Hot


Tip: The id column in the table refers to the search ID. You'll need to create your own host_id by concating price, room_type, host_since, zipcode, and number_of_reviews.


Output host popularity rating and their minimum, average and maximum rental prices.

Table: airbnb_host_searches

Answer: 
-- min, avg, max rental price for each host pop rating 
--Output host popularity rating and their minimum, average and maximum rental prices.
With simple_data as 
(
select 
distinct Concat ( price, room_type, host_since, zipcode, number_of_reviews) as id_new, 
case 
    WHEN number_of_reviews < 1 then 'New'
    WHEN number_of_reviews > 0 and number_of_reviews <6 then 'Rising' 
    WHEN number_of_reviews > 5 and number_of_reviews < 16 then 'Trending Up' 
    WHEN number_of_reviews > 15 and number_of_reviews < 41 then 'Popular' 
    WHEN number_of_reviews > 40 then 'Hot' END as popularity_rating, 
    price
from airbnb_host_searches  
order by Concat(price, room_type, host_since, zipcode, number_of_reviews)
)

Select 
    popularity_rating, 
    min (price), 
    avg (price), 
    max (price)
from simple_data
group by popularity_rating

Output: 
popularity_rating	min	avg	max
New	313.55	515.92	741.76
Hot	340.12	464.233	633.51
Popular	270.81	472.815	667.83
Rising	355.53	503.847	717.01
Trending Up	361.09	476.277	685.65


Question 2: Top 5 States With 5 Star Businesses

Find the top 5 states with the most 5 star businesses. Output the state name along with the number of 5-star businesses and order records by the number of 5-star businesses in descending order. In case there are ties in the number of businesses, return all the unique states. If two states have the same result, sort them in alphabetical order.

Table: yelp_business

-- top 5 states with most 5 star business 
-- output state name and num of 5 stars 
-- order by num 5 stars desc 
-- return unique states, if ties alphabetical (gonna use a where --- subquery)
with top5 as
(Select state, count(stars) as stars
from yelp_business 
where stars = '5'
group by state 
order by count(stars) desc 
limit 5)

Select state, count(stars) as num_five_stars
from yelp_business 
where stars = '5'
group by state 
having count(stars) >= ( Select min(stars) from top5)
order by count(stars) desc 

Output: 
state	num_five_stars
AZ	10
ON	5
NV	4
IL	3
WI	3
OH	3


Question 3: Premium vs Freemium

Find the total number of downloads for paying and non-paying users by date. Include only records where non-paying customers have more downloads than paying customers. The output should be sorted by earliest date first and contain 3 columns date, non-paying downloads, paying downloads.

Tables: ms_user_dimension, ms_acc_dimension, ms_download_facts

Answer: -- total downloads for paying/nonpaying customers by date 
-- inlude only records where non paying have more downloads than paying 
-- order by earliest date 
-- ouput date, non paying download, paying download
with ay as 
    (select * from ms_acc_dimension where paying_customer = 'yes'), 
an as 
    (select * from ms_acc_dimension where paying_customer = 'no'), 
final_data as
    (Select d.date, d.downloads,u.user_id, u.acc_id, ay.paying_customer as yes, an.paying_customer as no
    from ms_user_dimension as u
    join ms_download_facts as d
    on u.user_id = d.user_id 
    left join ay 
    on u.acc_id = ay.acc_id  
    left join an
    on u.acc_id = an.acc_id  ),
yes as (Select 
    date, 
    (select (sum(downloads)) where yes = 'yes') as paying_downloads 
    from final_data
    where yes is not null
    group by date, yes 
    order by date) , 
no as (
 Select 
    date, 
   (select (sum(downloads)) where no = 'no') as non_paying_downloads
    from final_data
    where no is not null
    group by date, no
    order by date)

select yes.date, non_paying_downloads, paying_downloads from yes join no 
on yes.date=no.date 
where non_paying_downloads > paying_downloads

Output: date	non_paying_downloads	paying_downloads
2020-08-16	15	14
2020-08-17	45	9
2020-08-18	10	7
2020-08-21	32	17

Question 4: Popularity Percentage

Find the popularity percentage for each user on Meta/Facebook. The popularity percentage is defined as the total number of friends the user has divided by the total number of users on the platform, then converted into a percentage by multiplying by 100.
Output each user along with their popularity percentage. Order records in ascending order by user id.
The 'user1' and 'user2' column are pairs of friends.

Answer: -- popularity percentage for eacg meta user 
-- total num friends / total num users on platform * 100 
-- output user and pop percentage 
-- order by user id asc 
with combined_data as (
(select user1 
from facebook_friends
order by user1 )
Union all 
(select user2 as user1 
from facebook_friends
order by user2 ) ), 
final_data as 
(select user1, count (user1) as num_friends, (select count(distinct user1) as total_users from combined_data ) 
from combined_data 
group by user1
order by user1)

select user1, (num_friends/total_users::decimal)*100 as pop_percentage from final_data

Output: user1	pop_percentage
1	55.556
2	33.333
3	33.333
4	11.111
5	11.111
6	22.222
7	11.111
8	11.111
9	11.111

Question 5: Classify Business Type
Classify each business as either a restaurant, cafe, school, or other. A restaurant should have the word 'restaurant' in the business name. For cafes, either 'cafe', 'café', or 'coffee' can be in the business name. 'School' should be in the business name for schools. All other businesses should be classified as 'other'. Output the business name and the calculated classification.

Table: sf_restaurant_health_violations

Answer: 
-- classify each business as restaurant, cafe, school, or other
--outout business name and type 
-- gonna have to use '%----%' and case statements 
Select distinct business_name, 
case 
    when business_name ilike any(array['%school%']) then 'school'
    when lower(business_name) like any(array['%restaurant%']) then 'restaurant' 
    when lower(business_name) like any(array['%cafe%', '%café%', '%coffee%']) then 'cafe'
    else 'other'  
    END as business_type
from sf_restaurant_health_violations

Output: Only included a portion of output 
business_name	business_type
Starbucks	other
TAWAN'S THAI FOOD	other
Burger King 4525	other
Tacos San Buena	other
BLOWFISH SUSHI	other
Tai Hing Inc.	other
ROYAL GROUND COFFEE	cafe
China Fun Express	other
Home Plate	other
Samiramis Imports	other
Modern Thai Inc.	other
WING HING RESTAURANT	restaurant
Salem Grocery	other
DENMAN MIDDLE SCHOOL	school
Sam Rong Cafe	cafe
Hilton Financial District- Restaurant Seven Fifty	restaurant
Batter Bakery	other
PRESIDIO THEATRE	other
Jay's Cheesesteak	other
Extreme Pizza	other

Question 6: Number of violations
You're given a dataset of health inspections. Count the number of violation in an inspection in 'Roxanne Cafe' for each year. If an inspection resulted in a violation, there will be a value in the 'violation_id' column. Output the number of violations by year in ascending order.

Table: sf_restaurant_health_violations
Answer: 
-- Count the number of violation in an inspection in 'Roxanne Cafe' for each year. 
--  If an inspection resulted in a violation, there will be a value in the 'violation_id' column.
--Output the number of violations by year in ascending order. 

Select business_name, count(violation_id) as num_violations, EXTRACT (YEAR from inspection_date) as year
from sf_restaurant_health_violations 
where business_name = 'Roxanne Cafe'
group by business_id, business_name, EXTRACT (YEAR from inspection_date)
order by business_id, year 

Output: 
business_name	num_violations	year
Roxanne Cafe	5	2015
Roxanne Cafe	2	2016
Roxanne Cafe	3	2018

Question 7: Day 1 Common Reactions
Find the most common reaction for day 1 by counting the number of occurrences for each reaction. Output the reaction alongside its number of occurrences.

Table: facebook_reactions

Answer: 
-- find most common reaction for day 1 
-- output reaction alongside number of occurances 
-- gonna use a count and group by function 

Select reaction, count(reaction) as number_of_occurances
from facebook_reactions
where date_day = '1' 
GROUP BY 1
Having (count(reaction)) = 
    (SELECT max(occurance)
   FROM
     (SELECT count(reaction) AS occurance
      FROM facebook_reactions
      WHERE date_day = '1'
      GROUP BY reaction) b)
order by count(reaction) desc

Output: 
reaction	number_of_occurances
like	5
laugh	5

Question 8: Successfully Sent Messages

Find the ratio of successfully received messages to sent messages.

Tables: facebook_messages_sent, facebook_messages_received

Answer:
-- ratio of successfully received messages to sent messages.
with combined as 
(select s.sender, r.receiver, s.message_id, s.text
from facebook_messages_sent as s
join facebook_messages_received as r
on s.message_id=r.message_id) 

Select (Select count(receiver) as received from combined)/count(sender)::decimal as ratio
from facebook_messages_sent

Output: 
ratio
0.6

Question 9: Customer Revenue In March

Calculate the total revenue from each customer in March 2019. Include only customers who were active in March 2019.


Output the revenue along with the customer id and sort the results based on the revenue in descending order.

Table: orders

Answer: 
--total revenue from active customer in march 2019 
-- ouptut revenue and customer id 
-- sort results based on revenue desc 

Select cust_id, Sum(total_order_cost) as revenue
from orders 
where order_date between '2019-03-01' and '2019-03-31'
group by cust_id

cust_id	revenue
15	150
7	80
12	20
3	210

Question 10: Employee and Manager Salaries
Find employees who are earning more than their managers. Output the employee's first name along with the corresponding salary.

Table: employee

Answer: 
-- employees who earn more than manager 
-- output first name along with salary 

select c.id, c.first_name, c.employee_title, c.salary, e.manager_id from employee as c
join employee e 
on e.id = c.manager_id 
where c.salary > e.salary

Output: 
id	first_name	employee_title	salary	manager_id
11	Richerd	Manager	250000	1

Question 11: Highest Salary In Department

Find the employee with the highest salary per department.
Output the department name, employee's first name along with the corresponding salary.

Table: employee

Answer: 
-- employee with the highest salary per department 
-- output department name, employee first name, corresponding salary 

Select first_name, department, salary 
from employee 
where department = 'Sales' and salary = 
    (Select MAX(salary) as max_salary_s
    from employee
    where department = 'Sales')
    OR 
    department = 'Management' and salary = 
    (Select MAX(salary) as max_salary_s
    from employee
    where department = 'Management')
    OR 
    department = 'Audit' and salary = 
    (Select MAX(salary) as max_salary_s
    from employee
    where department = 'Audit')
    order by salary desc

Output:
first_name	department	salary
Richerd	Management	250000
Mick	Sales	2200
Shandler	Audit	1100

Question 12: Highest Target Under Manager
Find the highest target achieved by the employee or employees who works under the manager id 13. Output the first name of the employee and target achieved. The solution should show the highest target achieved under manager_id=13 and which employee(s) achieved it.

Table: salesforce_employees

Answer: 
-- highest target achieved by the employee or employees who works under the manager id 13
-- output first name of employee and target acheived 
-- solution should show highest target achieved under 13 and which employee activated it

select first_name, max(target) as highest_target 
from salesforce_employees 
where manager_id = '13' and target = (select max(target) from salesforce_employees where manager_id = '13')
group by first_name

Output: 
first_name	highest_target
David	400
Steve	400
Nicky	400

Question 13: Highest Cost Orders

Find the customer with the highest daily total order cost between 2019-02-01 to 2019-05-01. If customer had more than one order on a certain day, sum the order costs on daily basis. Output customer's first name, total cost of their items, and the date.


For simplicity, you can assume that every first name in the dataset is unique.

Tables: customers, orders

Answer: 
--find customer with highest daily total order cost between 2019-02-01 to 2019-05-01
--if someone had more than one order on a given day, sum costs by day 
-- output first name, total cost, and date 
-- join based on cust id to id 
--group by function based on first name/ date and sum function on cost 
select c.first_name, sum(o.total_order_cost) as total_cost, o.order_date
from customers as c 
join orders as o 
on c.id= o.cust_id 
group by c.first_name, o.order_date 
having o.order_date between '2019-02-01' and '2019-05-01'
order by sum(o.total_order_cost) desc 
limit 1

Output:
first_name	total_cost	order_date
Jill	275	2019-04-19

Question 14: Reviews of Categories

Find the top business categories based on the total number of reviews. Output the category along with the total number of reviews. Order by total reviews in descending order.

Table: yelp_business

Output: 
--find top business categories with total number of reviews 
--output category and total number of reviews 
--order by total reviews in desc order 

Select unnest(string_to_array(categories, ';')) AS category, Sum(review_count) as total_reviews
from yelp_business 
group by unnest(string_to_array(categories, ';'))
order by sum(review_count) desc

Output: Only included a portion of output 
category	total_reviews
Restaurants	1703
Food	508
Pizza	456
Chinese	417
Japanese	350
Gluten-Free	344
Sushi Bars	331
American (New)	242
Italian	222
Bars	212
Nightlife	212
Modern European	197
Sandwiches	181
Greek	176
Shopping	174
Event Planning & Services	162
Sports Bars	151
Health & Medical	134
Wine & Spirits	120
American (Traditional)	120
Vegan	120
Beer	120
Canadian (New)	120
Beauty & Spas	114


Question 15: Highest Energy Consumption

Find the date with the highest total energy consumption from the Meta/Facebook data centers. Output the date along with the total energy consumption across all data centers.

Tables: fb_eu_energy, fb_asia_energy, fb_na_energy

Answer: 
--date with highest total energy consumption from data centers 
-- output this date with total energy consumption across all data centers 

With total_energy as 
(
Select * 
From fb_eu_energy as eu 
Union all 
Select * 
from fb_asia_energy as asia 
Union all 
select * 
from fb_na_energy as na 
),
energy_by_date AS (
Select date, sum(consumption) as total_energy
From total_energy 
group by date 
order by date asc),
max_energy as 
(Select max(total_energy) as max_energy
from energy_by_date )
select 
ebd.date,
ebd.total_energy
from energy_by_date ebd 
join max_energy me 
on ebd.total_energy = me.max_energy 

Output: 
date	total_energy
2020-01-06	1250
2020-01-07	1250


IIf you wish to see more questions, please visit my StrataScratch account listed at the top of this page
